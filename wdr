#!/bin/zsh
function wdr () {
# https://openweathermap.org/api/
usage() {echo "Usage: $0 [-c (current only)][-d (descriptions only)] [-h (help)] [location]" 1>&2;};
while getopts 'hcdl:' o; do
  case ${o} in
    h) usage; return 0;;
    c) c=1;;
    d) d=1;;
    l) location=${OPTARG};;
    *) usage; return 1;;
    esac
done

fetch=(curl -sf);
# fetch=(wget -qO -);
# filter=(pcre2grep -o '[\d.-]+');
# filter=(sed -r 's/(.?+) ([\d.-]+)/\2/; /null/d');
[ -z ${location} ] && location='Sofia,Bulgaria';
location=$(echo "${location}" | sed "s/ /%20/g");
api_key=85a4e3c55b73909f42c6a23ec35b7147;

api_call='weather';
weather=$(${fetch} "api.openweathermap.org/data/2.5/${api_call}?q=${location}&appid=${api_key}&units=metric") || (echo 'Sum Ting Wong!'; return 22);

if [ -z "${weather}" ]; then; echo "ERROR: Cannot fetch weather data"; return 69; fi;
if [ "$(echo "${weather}" | jq -r '.cod' 2>/dev/null)" != 200 ]; then; echo "ERROR: Cannot fetch weather data for the given location"; return 75; fi;

clear; figlet Weather for ${location};

if [[ ${c} -gt ${d} ]]; then;
    unset c location; echo ${weather} | jq -r .; return 0;
elif [[ ${c} -eq ${d} ]] && [[ ${c} -eq 1 ]]; then;
    unset c d location; echo ${weather} | jq -r '.weather|..|.description?'; return 0;
fi;

lat=$(echo "${weather}" | jq -r '.coord.lat');
lon=$(echo "${weather}" | jq -r '.coord.lon');

api_call='onecall';
weather=$(${fetch} "https://api.openweathermap.org/data/2.5/${api_call}?lat=${lat}&lon=${lon}&appid=${api_key}&units=metric" || echo 'Sum Ting Wong!'; return 22);

if [[ ${d} -eq 1 ]]; then;
    echo ${weather} | jq -r '.hourly|..|.description?' | sed '/null/d' | sed -ne 'x; /^$/ s/^.*$/1/; G; h; s/^/      /; s/^ *\(......\)\n/\1  /p; g; s/\n.*$//; /^9*$/ s/^/0/; s/.9*$/x&/; h; s/^.*x//; y/0123456789/1234567890/; x; s/x.*$//; G; s/\n//; h'; unset d location; return 0;
fi;

mkdir /tmp/wdr; cd /tmp/wdr;
# 48 HOUR FORECAST
echo ${weather} | jq -r '.hourly|..|.dt?' > dt48h;
echo ${weather} | jq -r '.hourly|..|.temp?' > temp48h;
echo ${weather} | jq -r '.hourly|..|.feels_like?' > feels_like48h;
echo ${weather} | jq -r '.hourly|..|.pressure?' > pressure48h;
echo ${weather} | jq -r '.hourly|..|.humidity?' > humidity48h;
echo ${weather} | jq -r '.hourly|..|.dew_point?' > dew_point48h;
echo ${weather} | jq -r '.hourly|..|.clouds?' > clouds48h;
echo ${weather} | jq -r '.hourly|..|.wind_speed?' > wind_speed48h;
echo ${weather} | jq -r '.hourly|..|.wind_deg?' > wind_deg48h;

# 7 DAY FORECAST
echo ${weather} | jq -r '.daily|..|.temp?|.min?' > min7d;
echo ${weather} | jq -r '.daily|..|.temp?|.max?' > max7d;

echo ${weather} | jq -r '.daily|..|.temp?|.day?' > day7d;
echo ${weather} | jq -r '.daily|..|.temp?|.night?' > night7d;
echo ${weather} | jq -r '.daily|..|.temp?|.eve?' > eve7d;
echo ${weather} | jq -r '.daily|..|.temp?|.morn?' > morn7d;

echo ${weather} | jq -r '.daily|..|.feels_like?|.day?' > flday7d;
echo ${weather} | jq -r '.daily|..|.feels_like?|.night?' > flnight7d;
echo ${weather} | jq -r '.daily|..|.feels_like?|.eve?' > fleve7d;
echo ${weather} | jq -r '.daily|..|.feels_like?|.morn?' > flmorn7d;

echo ${weather} | jq -r '.daily|..|.pressure?' > pressure7d;
echo ${weather} | jq -r '.daily|..|.humidity?' > humidity7d;
echo ${weather} | jq -r '.daily|..|.clouds?' > clouds7d;
echo ${weather} | jq -r '.daily|..|.dew_point?' > dew_point7d;
echo ${weather} | jq -r '.daily|..|.wind_deg?' > wind_deg7d;
echo ${weather} | jq -r '.daily|..|.wind_speed?' > wind_speed7d;

octave-cli --persist ~/.config/zsh/autoloadmedaddy/wdr.m;
cd ~; rm -r /tmp/wdr;
}
