#!/bin/zsh
function wdr () {
# https://openweathermap.org/api/
usage() {echo "Usage: $0 [-c (current only)] [-h (help)] [location]" 1>&2;};
while getopts 'hcl:' o; do
  case ${o} in
     h)  usage; return 0;;
     c)  c=1;;
     l)  location=${OPTARG};;
     *)  usage; return 1;;
     esac
done

fetch=(curl -sf);
# fetch=(wget -qO -);
filter=(pcre2grep -o '[\d.-]+');
# filter=(sed -r 's/(.?+) ([\d.-]+)/\2/; /null/d');
[ -z ${location} ] && location='Sofia,Bulgaria';
location=$(echo "${location}" | sed "s/ /%20/g");
api_key=85a4e3c55b73909f42c6a23ec35b7147;

api_call='weather';
weather=$(${fetch} "api.openweathermap.org/data/2.5/${api_call}?q=${location}&appid=${api_key}&units=metric") || (echo 'Sum Tin Wong!'; return 22);
clear; figlet Weather for ${location};
echo ${weather} | jq -r;
((${c})) && unset c location && return 0;

if [ -z "${weather}" ]; then; echo "ERROR: Cannot fetch weather data"; return 69; fi;
if [ "$(echo "${weather}" | jq -r '.cod' 2>/dev/null)" != 200 ]; then; echo "ERROR: Cannot fetch weather data for the given location"; return 75; fi;

lat=$(echo "${weather}" | jq -r '.coord.lat');
lon=$(echo "${weather}" | jq -r '.coord.lon');

api_call='onecall';
weather=$(${fetch} "https://api.openweathermap.org/data/2.5/${api_call}?lat=${lat}&lon=${lon}&appid=${api_key}&units=metric");

mkdir /tmp/wdr; cd /tmp/wdr;
# 48 HOUR FORECAST
echo ${weather} | jq -r '.hourly|..|.dt?' | ${filter} > dt48h;
echo ${weather} | jq -r '.hourly|..|.temp?' | ${filter} > temp48h;
echo ${weather} | jq -r '.hourly|..|.feels_like?' | ${filter} > feels_like48h;
echo ${weather} | jq -r '.hourly|..|.pressure?' | ${filter} > pressure48h;
echo ${weather} | jq -r '.hourly|..|.humidity?' | ${filter} > humidity48h;
echo ${weather} | jq -r '.hourly|..|.dew_point?' | ${filter} > dew_point48h;
echo ${weather} | jq -r '.hourly|..|.clouds?' | ${filter} > clouds48h;
echo ${weather} | jq -r '.hourly|..|.wind_speed?' | ${filter} > wind_speed48h;
echo ${weather} | jq -r '.hourly|..|.wind_deg?' | ${filter} > wind_deg48h;

# 7 DAY FORECAST
echo ${weather} | jq -r '.daily|..|.temp?|.min?' | ${filter} > min7d;
echo ${weather} | jq -r '.daily|..|.temp?|.max?' | ${filter} > max7d;

echo ${weather} | jq -r '.daily|..|.temp?|.day?' | ${filter} > day7d;
echo ${weather} | jq -r '.daily|..|.temp?|.night?' | ${filter} > night7d;
echo ${weather} | jq -r '.daily|..|.temp?|.eve?' | ${filter} > eve7d;
echo ${weather} | jq -r '.daily|..|.temp?|.morn?' | ${filter} > morn7d;

echo ${weather} | jq -r '.daily|..|.feels_like?|.day?' | ${filter} > flday7d;
echo ${weather} | jq -r '.daily|..|.feels_like?|.night?' | ${filter} > flnight7d;
echo ${weather} | jq -r '.daily|..|.feels_like?|.eve?' | ${filter} > fleve7d;
echo ${weather} | jq -r '.daily|..|.feels_like?|.morn?' | ${filter} > flmorn7d;

echo ${weather} | jq -r '.daily|..|.pressure?' | ${filter} > pressure7d;
echo ${weather} | jq -r '.daily|..|.humidity?' | ${filter} > humidity7d;
echo ${weather} | jq -r '.daily|..|.clouds?' | ${filter} > clouds7d;
echo ${weather} | jq -r '.daily|..|.dew_point?' | ${filter} > dew_point7d;
echo ${weather} | jq -r '.daily|..|.wind_deg?' | ${filter} > wind_deg7d;
echo ${weather} | jq -r '.daily|..|.wind_speed?' | ${filter} > wind_speed7d;

octave-cli --persist ~/.config/zsh/autoloadmedaddy/wdr.m;
cd ~; rm -r /tmp/wdr;
}
